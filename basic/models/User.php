<?php/*namespace app\models;use yii\base\Exception;use yii\db\ActiveRecord;use Yii;class User extends ActiveRecord implements \yii\web\IdentityInterface{    public $id;    public $username;    public $password;    public $authKey;    public $password_hash;    public $accessToken;    public static function tableName()    {        return 'users';    }    public static function findIdentity($id)    {        return static::findOne($id);    }    public static function findIdentityByAccessToken($token, $type = null)    {        return static::findOne(['accessToken' => $token]);    }    public static function findByUsername($username)    {        return static::findOne(['username' => $username]);    }    public function getId()    {        return $this->id;    }    /**     * {@inheritdoc}     */    /*public function getAuthKey()    {        return $this->authKey;    }    public function validateAuthKey($authKey)    {        return $this->authKey === $authKey;    }    public function setPassword($password)    {        $this->password_hash = Yii::$app->security->generatePasswordHash($password);    }    public function generateAuthKey()    {        $this->authKey = Yii::$app->security->generateRandomString();    }    // Другие функции и правила валидации, если они вам нужны}// app\models\User.php*/namespace app\models;use Yii;use yii\base\NotSupportedException;use yii\db\ActiveRecord;use yii\helpers\Security;use yii\web\IdentityInterface;/** * User model * * @property int $id * @property string $username * @property string $password_hash * @property string $auth_key * @property string $password_reset_token * @property string $email * @property int $created_at * @property int $updated_at */class User extends ActiveRecord implements IdentityInterface{    /**     * {@inheritdoc}     */    public static function tableName()    {        return 'users';    }    /**     * {@inheritdoc}     */    /**     * {@i}     */    /**     * Finds user by ID     *     * @param int|string $id     * @return User|null     */    public static function findIdentity($id)    {        return static::findOne(['id' => $id]);    }    /**     * {@inheritdoc}     */    public static function findIdentityByAccessToken($token, $type = null)    {    }    /**     * Finds user by username     *     * @param string $username     * @return User|null     */    public static function findByUsername($username)    {        return static::findOne(['username' => $username]);    }    /**     * {@inheritdoc}     */    public function getId()    {        return $this->getPrimaryKey();    }    /**     * {@inheritdoc}     */    public function getAuthKey()    {        return $this->auth_key;    }    /**     * {@inheritdoc}     */    public function validateAuthKey($authKey)    {        return $this->getAuthKey() === $authKey;    }    /**     * Validates a password     *     * @param string $password     * @return bool     */    public function validatePassword($password)    {        return Yii::$app->security->validatePassword($password, $this->password_hash);    }    /**     * Generates password hash from password and sets it to the model     *     * @param string $password     * @throws \yii\base\Exception     */    public function setPassword($password)    {        $this->password_hash = Yii::$app->security->generatePasswordHash($password);    }}